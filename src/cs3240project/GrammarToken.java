package cs3240project;

import java.util.List;
import java.util.ArrayList;

/**
 * Token generated by the grammar scanner, keeps important info about first/follow sets for grammar scanner
 */

public class GrammarToken extends Token {
    private List<GrammarToken> first;
    private List<GrammarToken> follow;
    private boolean isTerminal;

    /**
     * Create a new token
     * @param type class of token
     * @param instance literal value in source
     * @param isTerminal whether or not this is a terminal or nonterminal grammartoken
     */
	
    public GrammarToken(String type, String instance, boolean isTerminal) {
        super(type, instance);
        this.first = new ArrayList<GrammarToken>();
        this.follow = new ArrayList<GrammarToken>();
        if (isTerminal) {
            this.addToFirst(this);
        }
    }

    /**
     * Set the first set
     * @param first the first set to switch to
     */

    public void setFirst(List<GrammarToken> first) {
        this.first = first;
    }

    /**
     * Set the follow set
     * @param follow the follow set to switch to
     */

    public void setFollow(List<GrammarToken> follow) {
        this.follow = follow;
    }

    /**
     * Add token values to first set
     * @param token token to add to first set
     */

    public void addToFirst(GrammarToken token) {
        this.first.add(token);
    }

    /**
     * Add token values to follow set
     * @param token token to add to follow set
     */

    public void addToFollow(GrammarToken token) {
        this.follow.add(token);
    }

    /**
     * Get follow set
     * @return follow set
     */

    public List<GrammarToken> getFollow() {
        return this.follow;
    }

    /**
     * Get first set
     * @return first set
     */

    public List<GrammarToken> getFirst() {
        return this.first;
    }

    public String toString() {
        return getInstance();
    }

    public boolean equals(Object o) {
        return getInstance().equals(((Token) o).getInstance());
    }
}
